Реализовать класс с функционалом - DNS кэш.

В классе 2 основных метода:

1. Сохранение связки имя->ip

2. Получение ip по имени

 

Код запускаемого приложения является тестом функционала класса.

 

Допускается считать, что ip - строковое значение.

 

class DNSCache

{

public:

 

    void update(const std::string& name, const std::string& ip) = 0;

    std::string resolve(const std::string& name) const = 0;

};

 

 

Требования:

1. Реализовать возможность создания класса DNS-кэш только в одном экземпляре на процесс

2. Количество сохраняемых элементов в кэше лимитировано при его создании.

3. В случае вставки нового элемента в уже полностью заполненный кэш необходимо освободить для него места за счет самого старого элемента кэша.

4. В случае вставки дублирущего значения name, необходимо обновить ip и время элемента так, чтобы он считался новым элементом.

5. Прилагаемые тесты должны быть автоматическими, исключающими ручной ввод данных.

6. Обеспечить корректную работу кэша в многопоточной среде. Адаптировать код запускаемого приложения под многопоточную.

7. Подсчитать сложность методов вставки в кэш и извлечения из кэша

8. Реализовать класс наиболее оптимально по сложности вставки/извлечения и объему хранения.

9. Допускается использовать стандарты C++ с 11 до 17 включительно.

10. Допускается использовать только STL.

11. Для сборки обязательно наличие либо Makefile для утилиты make,

    либо CMakeLists.txt для cmake,

    либо autotools, либо иной сценарий автоматической сборки проекта.

12. Сборка при помощи shell, bash или иного языка командного интерпретатора не допускается.

13. На выходе сценария сборки должен получится исполняемый файл.

14. Исполняемый файл должен собираться и запускаться в Linux среде.